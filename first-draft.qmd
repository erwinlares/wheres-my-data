---
title: "where's my data"
author: "Erwin Lares"
format: html
---
```{r}
library(googledrive)
library(tidyverse)
library(httr2)
library(jsonlite)
library(arrow)
library(rbenchmark)
library(tictoc)
```

## File formats you might want to know about 

A lot of us are familiar with text-based tabular formats such as .csv files. If you and your researchers are working with large dataset, it might be useful to explore other file formats. Today, I will mention 

Apache Arrow is a software development platform for building high performance applications that process and transport large data sets. It is designed to improve the performance of data analysis methods, and to increase the efficiency of moving data from one system or programming language to another.

```{r}
arrow_penguins <- arrow_table(penguins)

arrow_penguins

write_feather(arrow_penguins, 
              sink = "data/feather-penguins.arrow")

write_parquet(arrow_penguins, 
              sink = "data/parquet-penguins.parquet")

object.size(arrow_penguins)

```


## Start with the basis 

We are all familiar with `read.csv()` and its `tidyverse` counterpart.  

Is size a factor that should be considered when reading csv files 

```{r}
results <- benchmark(read.csv("data/original-penguins.csv"), read_csv("data/original-penguins.csv"), replications = 10)

results
```


```{r}
tic(".csv")
read.csv("data/original-penguins.csv")
toc()

tic("_csv")
read_csv("data/original-penguins.csv")
toc()
```


```{r}
results <- benchmark(read.csv("data/new-penguins.csv"), read_csv("data/new-penguins.csv"), replications = 10)

results
```

```{r}
tic(".csv")
read.csv("data/new-penguins.csv")
toc()

tic("_csv")
read_csv("data/new-penguins.csv")
toc()
```


## Local workflows



## Remote workflows

### GoogleDrive 

You might want to wrive a file to your googledrive. I'll walk you through how that can be accomplished in the next few minutes. 

A few details before we get to work 

- Changes in policy 
- Access to a service account

#### Authorize googledrive 

#### Authenticate 

```{r}

library(googledrive)
drive_auth(
email = Sys.getenv("workbench_googledrive_email"),
path = "workbench-googledrive.json",
subject = NULL,
scopes = "drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL
)


```

#### Find the drive 

```{r}
drive_find(n_max = 10)


```

#### upload a file 

```{r}

drive_upload(
    media = "data/original-penguins.csv",
    path = "workbench-googledrive/original-penguins.csv")

```

#### Checking 

```{r}
gd_files <- drive_find(type = "csv")

```

#### Reading a googledrive file into R

This approach does not read the file into R, but rather writes it locally. It needs to be subsequently load it into the current session.  

```{r}
# penguins <- drive_get(as_id(gd_files$id[1]))
# this just got the id back 

drive_download(
    file = "workbench-googledrive/new-penguins.csv",
    path = "data/new-penguins.csv",
    type = "csv", 
    overwrite = FALSE)

```

### APIs 

```{r}
req <- request("https://api.thedogapi.com/v1/images/search") |> 
    req_headers(limit = 5)
  
req <- request("https://api.thecatapi.com/v1/images/search?limit=15&breed_ids=beng&api_key=live_nD5vkT9N6L4PXnK0gs1sFETKWcSAnso9YkH6iYPMfsZpK2mVStNEYxX3tIGzgfdL") |> 
    req_body_json(list(has_breeds = 1))
  
req |> req_dry_run()
resp <- req_perform(req)
resp %>% resp_status_desc()

resp |> resp_content_type()
resp |> resp_body_json()
```

